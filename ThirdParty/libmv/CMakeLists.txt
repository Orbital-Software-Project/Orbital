# ***** BEGIN GPL LICENSE BLOCK *****
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# The Original Code is Copyright (C) 2011, Blender Foundation
# All rights reserved.
# ***** END GPL LICENSE BLOCK *****

# NOTE: This file is automatically generated by bundle.sh script
#       If you're doing changes in this file, please update template
#       in that script too

project(libmv)

set(INC
  .
)

set(SRC
  libmv-capi.h
)

  if(WIN32)
    add_definitions(-D_USE_MATH_DEFINES)
  endif()

if(MSVC)
    add_compile_options(/bigobj)
endif()

  find_package(glog CONFIG REQUIRED)
  find_package(gflags CONFIG REQUIRED)
  find_package(Eigen3 CONFIG REQUIRED)
  find_package(ZLIB REQUIRED)
  find_package(libpng CONFIG REQUIRED)
  find_package(Ceres CONFIG REQUIRED)


  add_definitions(${GFLAGS_DEFINES})
  add_definitions(${GLOG_DEFINES})
  add_definitions(${CERES_DEFINES})
  #add_definitions(-DLIBMV_GFLAGS_NAMESPACE=${GFLAGS_NAMESPACE})
  add_definitions(-DLIBMV_GFLAGS_NAMESPACE=gflags)


  add_definitions(
    #-DWITH_LIBMV_GUARDED_ALLOC
    -DLIBMV_NO_FAST_DETECTOR=
  )

  list(APPEND SRC
    intern/autotrack.cc
    intern/camera_intrinsics.cc
    intern/detector.cc
    intern/frame_accessor.cc
    intern/homography.cc
    intern/image.cc
    intern/logging.cc
    intern/reconstruction.cc
    intern/track_region.cc
    intern/tracks.cc
    intern/tracksN.cc
    libmv/autotrack/autotrack.cc
    libmv/autotrack/predict_tracks.cc
    libmv/autotrack/tracks.cc
    libmv/base/aligned_malloc.cc
    libmv/image/array_nd.cc
    libmv/image/convolve.cc
    libmv/multiview/conditioning.cc
    libmv/multiview/euclidean_resection.cc
    libmv/multiview/fundamental.cc
    libmv/multiview/homography.cc
    libmv/multiview/panography.cc
    libmv/multiview/panography_kernel.cc
    libmv/multiview/projection.cc
    libmv/multiview/triangulation.cc
    libmv/numeric/numeric.cc
    libmv/numeric/poly.cc
    libmv/simple_pipeline/bundle.cc
    libmv/simple_pipeline/camera_intrinsics.cc
    libmv/simple_pipeline/detect.cc
    libmv/simple_pipeline/distortion_models.cc
    libmv/simple_pipeline/initialize_reconstruction.cc
    libmv/simple_pipeline/intersect.cc
    libmv/simple_pipeline/keyframe_selection.cc
    libmv/simple_pipeline/modal_solver.cc
    libmv/simple_pipeline/pipeline.cc
    libmv/simple_pipeline/reconstruction.cc
    libmv/simple_pipeline/reconstruction_scale.cc
    libmv/simple_pipeline/resect.cc
    libmv/simple_pipeline/tracks.cc
    libmv/tracking/brute_region_tracker.cc
    libmv/tracking/hybrid_region_tracker.cc
    libmv/tracking/klt_region_tracker.cc
    libmv/tracking/pyramid_region_tracker.cc
    libmv/tracking/retrack_region_tracker.cc
    libmv/tracking/track_region.cc
    libmv/tracking/trklt_region_tracker.cc


    intern/autotrack.h
    intern/camera_intrinsics.h
    intern/detector.h
    intern/frame_accessor.h
    intern/homography.h
    intern/image.h
    intern/logging.h
    intern/reconstruction.h
    intern/track_region.h
    intern/tracks.h
    intern/tracksN.h
    libmv/autotrack/autotrack.h
    libmv/autotrack/callbacks.h
    libmv/autotrack/frame_accessor.h
    libmv/autotrack/marker.h
    libmv/autotrack/model.h
    libmv/autotrack/predict_tracks.h
    libmv/autotrack/quad.h
    libmv/autotrack/reconstruction.h
    libmv/autotrack/region.h
    libmv/autotrack/tracks.h
    libmv/base/aligned_malloc.h
    libmv/base/id_generator.h
    libmv/base/scoped_ptr.h
    libmv/base/vector.h
    libmv/base/vector_utils.h
    libmv/image/array_nd.h
    libmv/image/convolve.h
    libmv/image/correlation.h
    libmv/image/image_converter.h
    libmv/image/image_drawing.h
    libmv/image/image.h
    libmv/image/sample.h
    libmv/image/tuple.h
    libmv/logging/logging.h
    libmv/multiview/conditioning.h
    libmv/multiview/euclidean_resection.h
    libmv/multiview/fundamental.h
    libmv/multiview/homography_error.h
    libmv/multiview/homography.h
    libmv/multiview/homography_parameterization.h
    libmv/multiview/nviewtriangulation.h
    libmv/multiview/panography.h
    libmv/multiview/panography_kernel.h
    libmv/multiview/projection.h
    libmv/multiview/resection.h
    libmv/multiview/triangulation.h
    libmv/multiview/two_view_kernel.h
    libmv/numeric/dogleg.h
    libmv/numeric/function_derivative.h
    libmv/numeric/levenberg_marquardt.h
    libmv/numeric/numeric.h
    libmv/numeric/poly.h
    libmv/simple_pipeline/bundle.h
    libmv/simple_pipeline/callbacks.h
    libmv/simple_pipeline/camera_intrinsics.h
    libmv/simple_pipeline/camera_intrinsics_impl.h
    libmv/simple_pipeline/detect.h
    libmv/simple_pipeline/distortion_models.h
    libmv/simple_pipeline/initialize_reconstruction.h
    libmv/simple_pipeline/intersect.h
    libmv/simple_pipeline/keyframe_selection.h
    libmv/simple_pipeline/modal_solver.h
    libmv/simple_pipeline/pipeline.h
    libmv/simple_pipeline/reconstruction.h
    libmv/simple_pipeline/reconstruction_scale.h
    libmv/simple_pipeline/resect.h
    libmv/simple_pipeline/tracks.h
    libmv/tracking/brute_region_tracker.h
    libmv/tracking/hybrid_region_tracker.h
    libmv/tracking/kalman_filter.h
    libmv/tracking/klt_region_tracker.h
    libmv/tracking/pyramid_region_tracker.h
    libmv/tracking/region_tracker.h
    libmv/tracking/retrack_region_tracker.h
    libmv/tracking/track_region.h
    libmv/tracking/trklt_region_tracker.h

    third_party/msinttypes/inttypes.h
    third_party/msinttypes/stdint.h
  )


include_directories("${INC}")
add_library(libmv STATIC "${SRC}")

target_link_libraries(libmv PRIVATE png ZLIB::ZLIB gflags_shared glog::glog Eigen3::Eigen ceres) 